@startuml Diagrama 2
title Diagrama Sistema BoleterÃ­a

class Usuario{
    -nombre: String
    -correo: String
    -telefono: String
    +Usuario(String, String, String)>
    +toString(): String
}

class Concierto{
    -nombre: String
    -fecha: LocalDate
    -hora: LocalTime
    -lugar: Lugar
    -artistas: List<String>
    -boletos: List<Boleto>
    +Concierto(String, LocalDate, LocalTime, Lugar)
    +toString(): String
}

class Lugar{
    -nombre: String
    -direccion: String
    -capacidad: int
    +Lugar(String, String, int)
    +toString(): String
}

enum TipoAsiento {
    VIP,
    General
}

class Asiento{
    -numero: int
    -fila: String
    -tipo: TipoAsiento
    +Asiento(int, String, TipoAsiento)
    +toString(): String
}

enum EstadoBoleto{
    Disponible,
    Vendido
}

class Boleto{
    -id: int
    -precio: long
    -estado: EstadoBoleto
    -concierto: Concierto
    -asiento: Asiento
    +Boleto(int, long, EstadoBoleto, Concierto, Asiento)
    +setEstado(EstadoBoleto): void
    +toString(): String
}

class Compra{
    -usuario: Usuario
    -boletosComprados: List<Boleto>
    -fecha: LocalDate
    +Compra(Usuario, List<Boleto>, LocalDate)
    +toString(): String
}

class SistemaVentas{
    +buscarConciertos(String, LocalDate, String): List<Concierto>
    +seleccionarAsiento(Concierto, int): Asiento
    +comprarBoleto(Usuario, List<Boleto>): Compra
    +confirmacionCompra(Compra): String
}   

Boleto -> EstadoBoleto: usa
Asiento -> TipoAsiento: usa


Usuario ..> SistemaVentas: usa
SistemaVentas ..> Compra: crea
SistemaVentas ..> Concierto: consulta

Usuario "1" --> "1..*" Compra
Compra "1" --> "1..*" Boleto
Boleto "1..*" --> "1" Concierto: pertenecen a:
Concierto "1" --> "1" Lugar: tiene
Boleto "1" --> "1" Asiento: tiene
@enduml