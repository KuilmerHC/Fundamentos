@startuml Diagrama 1
title Diagrama Agencia de Viajes

class Pasajero{
    -id: int
    -nombre: String
    -edad: int
    -genero: String
    +Pasajero(int, String, int, String)
    +getId(): int
    +getNombre(): String
    +getEdad(): int
    +getGenero(): String
    +toString(): String
}

class Vuelo{
    -numero: int
    -ciudadSalida: Ciudad
    -ciudadDestino: Ciudad
    -horaDeSalida: LocalTime
    -horaDeLlegada: LocalTime
    -duracionVuelo: String
    -Tiquetes: List<Tiquete>
    +Vuelo(int, Ciudad, Ciudad, LocalTime, LocalTime, String)
    +getNumero(): int
    +getCiudadDestino(): void
    +getHoraSalida(): void
    +getHoraLlegada(): void
    +toString(): String
}

enum Estado{
    Disponible,
    Vendido
}

class Tiquete{
    -numero: int
    -fechaCompra: LocalDate
    -numeroDeSilla: String
    -estado: Estado
    -vuelo: Vuelo
    +Tiquete(int, String, Vuelo)
    +getTiquete(): Tiquete
    +getFechaCompra(): void
    +setEstado(Estado): void
    +setFechaCompra(): void
    +toString(): String
}

class Ciudad{
    -codigo: String
    -nombre: String
    +Ciudad(String, String)
    +getNombre(): String
    +toString(): String
}


class Compra{
    -pasajero: Pasajero
    -tiquetesComprados: List<Tiquete>
    +Compra(Pasajero, List<Tiquete>)
    +agregarTiquete(): void
    +getPasajero(): String
    +getTotal(): double
    +getFecha(): LocalDate
    +getTiquetesComprados(): List<Tiquete>
    +toString(): String
}


class Agencia{
    -listaVuelos: List<Vuelo>
    -listaCompras: List<Compra>
    +main(): void static

    +buscarConciertos(nombre: String, fecha: LocalDate, artista: String): Concierto
    +seleccionarAsiento(Concierto, numeroAsiento: int): void
    +comprarBoleto(usr: Usuario, boletos: List<Boleto>): void
} 


Tiquete .> Estado: usa

Agencia ..> Compra: usa
Agencia ..> Vuelo: consulta

Pasajero "1..*" <--o "1..*" Compra: registra
Compra "1" *--> "1..*" Tiquete: tiene
Tiquete "1..*" <--* "1" Vuelo: vende
Vuelo "1..*" o--> "1..*" Ciudad: tiene

@enduml